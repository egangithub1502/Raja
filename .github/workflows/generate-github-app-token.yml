name: Auto Generate GitHub App Token

on:
  schedule:
    - cron: '0 3 * * *' # Runs daily at 3 AM
  workflow_dispatch:

jobs:
  generate-token:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Generate GitHub App Token
      run: |
        APP_ID="${{ secrets.APP_ID }}"
        PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}"
        JWT_FILE="/home/runner/github-scripts/jwt_file.jwt"
        TOKEN_FILE="/home/runner/github-scripts/token_file"
        INSTALLATION_ID_FILE="/home/runner/github-scripts/installation_id_file"

        generate_jwt() {
          local payload
          payload=$(printf "{\"iat\":%d,\"exp\":%d,\"iss\":\"%s\"}" "$(date +%s)" "$(date +%s -d '+10 minutes')" "$APP_ID")
          local jwt
          jwt=$(echo -n "$payload" | openssl dgst -sha256 -sign <(echo -n "$PRIVATE_KEY") -binary | base64 | tr -d '\n')
          echo "$jwt" > "$JWT_FILE"
        }

        get_installation_id() {
          local jwt
          jwt=$(cat "$JWT_FILE")
          local response
          response=$(curl -s -X GET \
            -H "Authorization: Bearer $jwt" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/app/installations)
          echo "$response" | jq -r '.[0].id' > "$INSTALLATION_ID_FILE"
        }

        generate_access_token() {
          local installation_id
          installation_id=$(cat "$INSTALLATION_ID_FILE")
          local jwt
          jwt=$(cat "$JWT_FILE")
          local token
          token=$(curl -s -X POST \
            -H "Authorization: Bearer $jwt" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/app/installations/"$installation_id"/access_tokens | jq -r .token)
          echo "$token" > "$TOKEN_FILE"
        }

        generate_jwt
        get_installation_id
        generate_access_token

        echo "Installation ID: $(cat "$INSTALLATION_ID_FILE")"
        echo "Access Token: $(cat "$TOKEN_FILE")"
