name: List and Deploy Changed Files

on:
  push:
    branches:
      - develop
  pull_request:
    types: [closed]
    branches:
      - develop

jobs:
  list-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure full history is fetched
      
      - name: Fetch the latest commits
        run: git fetch --prune

      - name: List changed files from the last commit
        id: list_files
        run: |
          # Ensure we have a previous commit to compare
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            echo "Changed files from the last commit:"
            git diff --name-only HEAD^ HEAD > changed_files.txt
          else
            echo "Only one commit found, listing changes from the first commit:"
            git diff --name-only $(git rev-list --max-parents=0 HEAD) HEAD > changed_files.txt

          # Output changed files for use in subsequent steps
          echo "Changed files:"
          cat changed_files.txt
          echo "files=$(cat changed_files.txt)" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: list-files

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get changed files
        id: get_changed_files
        run: |
          changed_files="${{ env.files }}"
          echo "Changed files: $changed_files"
          echo "$changed_files" > changed_files.txt

      - name: Deploy Changed Files to Remote Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          GIT_PATH: "/home/jegan/git-rsync-en"
          DEPLOY_PATH: "/home/jegan/www_profitokrs_com_6_4_1"
          BACKUP_PATH: "/home/jegan/profit-site-en-backup"
        run: |
          sudo apt-get install -y sshpass
          eval "$(ssh-agent -s)"
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          changed_files="${{ env.files }}"
          files=($changed_files)
          DATE=$(date +%F-%H-%M)
          echo "Number of Files = ${#files[@]}"
          echo " "
          for file in "${files[@]}"; do
              if ssh $REMOTE_USER@$REMOTE_HOST "[ -f '$DEPLOY_PATH/$file' ]"; then
                  echo "Backing up $DEPLOY_PATH/$file"
                  ssh $REMOTE_USER@$REMOTE_HOST "sudo cp -r '$DEPLOY_PATH/$file' '$BACKUP_PATH/$file-bak-$DATE'"
              fi
              echo "Deploying $file to $REMOTE_HOST"
              scp -o StrictHostKeyChecking=no "$GIT_PATH/$file" "$REMOTE_USER@$REMOTE_HOST:$DEPLOY_PATH/$file"
              ssh $REMOTE_USER@$REMOTE_HOST "sudo chown -R www-data: '$DEPLOY_PATH/$file'; sudo chmod 640 '$DEPLOY_PATH/$file'"
              echo "$file deployed successfully"
          done
