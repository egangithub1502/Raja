name: Deploy on Develop Merge

on:
  push:
    branches:
      - develop  # Trigger on pushes to the develop branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get changed files
        id: get_changed_files
        run: |
          echo "Changed files since last merge:"
          git fetch origin develop

          # Get changed files from the last commit in develop to HEAD
          changed_files=$(git diff --name-only develop HEAD)
          echo "$changed_files" > changed_files.txt
          echo "FILES=$(cat changed_files.txt)" >> $GITHUB_ENV

      - name: Deploy Changed Files to Remote Server
        if: ${{ env.FILES != '' }}
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          GIT_PATH: "/home/jegan/git-rsync-en"
          DEPLOY_PATH: "/home/jegan/www_profitokrs_com_6_4_1"
          BACKUP_PATH: "/home/jegan/profit-site-en-backup"
        run: |
          # Fetch changed files from output
          IFS=$'\n'  # Set internal field separator to newline
          for file_to_deploy in $FILES; do
              DATE=$(date +%F-%H-%M)

              echo "Deploying $file_to_deploy to $REMOTE_HOST"
              if ssh $REMOTE_USER@$REMOTE_HOST "[ -f '$DEPLOY_PATH/$file_to_deploy' ]"; then
                  echo "Backing up $DEPLOY_PATH/$file_to_deploy"
                  ssh $REMOTE_USER@$REMOTE_HOST "sudo cp -r '$DEPLOY_PATH/$file_to_deploy' '$BACKUP_PATH/$file_to_deploy-bak-$DATE'" || { echo "Backup failed"; exit 1; }
              fi

              scp -o StrictHostKeyChecking=no "$GIT_PATH/$file_to_deploy" "$REMOTE_USER@$REMOTE_HOST:$DEPLOY_PATH/$file_to_deploy" || { echo "Deployment of $file_to_deploy failed"; exit 1; }
              ssh $REMOTE_USER@$REMOTE_HOST "sudo chown -R www-data: '$DEPLOY_PATH/$file_to_deploy'; sudo chmod 640 '$DEPLOY_PATH/$file_to_deploy'" || { echo "Permission update failed"; exit 1; }
              echo "$file_to_deploy deployed successfully"
          done
