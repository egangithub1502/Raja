name: Create Pull Requests for Branch Merging

on:
  push:
    branches:
      - 'profit_dep_hf_*'
      - 'profit_dep_minor_*'

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JEGANMERGE }}

      - name: Fetch All Branches
        run: |
          git fetch --all

      - name: Determine Branch Type and Latest Branches
        id: determine_branches
        run: |
          # Extract branch name from the reference
          branch_name="${GITHUB_REF#refs/heads/}"
          
          # Determine if this is an HF or minor branch
          case "$branch_name" in
            profit_dep_hf_*)
              BRANCH_TYPE="hf"
              ;;
            profit_dep_minor_*)
              BRANCH_TYPE="minor"
              ;;
            *)
              BRANCH_TYPE="none"
              ;;
          esac
          
          echo "Branch Type: $BRANCH_TYPE"
          
          if [ "$BRANCH_TYPE" == "hf" ]; then
            # Get the latest HF branch
            latest_hf_branch=$(git branch -r | grep 'origin/profit_dep_hf_' | sed 's/origin\///' | sort -r | head -n 1 | xargs)
            echo "Latest HF branch: $latest_hf_branch"
            
            # Get the corresponding minor branch based on date suffix
            date_suffix="${branch_name##*_}"
            latest_minor_branch=$(git branch -r | grep "origin/profit_dep_minor_" | sed 's/origin\///' | sort -r | head -n 1 | xargs)
            echo "Latest minor branch: $latest_minor_branch"
            
            # Check if the latest_minor_branch was found
            if [ -z "$latest_minor_branch" ]; then
              echo "No matching minor branch found."
              exit 1
            fi

            echo "latest_minor_branch=$latest_minor_branch" >> $GITHUB_ENV
          elif [ "$BRANCH_TYPE" == "minor" ]; then
            # For minor branches, find the latest master branch
            latest_master_branch="master"
            echo "latest_master_branch=$latest_master_branch" >> $GITHUB_ENV
          fi

      - name: Check if branch is master
        id: check_branch
        run: |
          branch_name=${GITHUB_REF#refs/heads/}
          if [ "$branch_name" = "master" ]; then
            echo "Direct commit to master detected. No action taken."
            exit 0
          fi
        continue-on-error: true

      - name: Create PR from HF to Minor
        if: steps.determine_branches.outputs.BRANCH_TYPE == 'hf'
        env:
          GH_TOKEN: ${{ secrets.JEGANMERGE }}
        run: |
          branch_name=${GITHUB_REF#refs/heads/}
          echo "Creating PR from $branch_name to $latest_minor_branch"
          
          gh pr create \
            --title "Merge $branch_name into $latest_minor_branch" \
            --body "This PR merges the changes from $branch_name into $latest_minor_branch." \
            --base "$latest_minor_branch" \
            --head "$branch_name" \
            --reviewer "jessesquires"

      - name: Create PR from Minor to Master
        if: steps.determine_branches.outputs.BRANCH_TYPE == 'minor'
        env:
          GH_TOKEN: ${{ secrets.JEGANMERGE }}
        run: |
          branch_name=${GITHUB_REF#refs/heads/}
          echo "Creating PR from $branch_name to master"
          
          gh pr create \
            --title "Merge $branch_name into master" \
            --body "This PR merges the changes from $branch_name into master." \
            --base master \
            --head "$branch_name" \
            --reviewer "jessesquires"
