name: Auto Merge Latest HF to Minor Branches

on:
  workflow_dispatch:
  push:
    branches:
      - 'profit_dep_hf_*'
      - 'profit_dep_minor_*'

jobs:
  merge-branches:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Determine Branch Type and Latest Branches
        id: determine-branches
        run: |
          # Extract branch name from the reference
          branch_name="${GITHUB_REF#refs/heads/}"
          
          # Determine if this is an HF or minor branch
          case "$branch_name" in
            profit_dep_hf_*)
              BRANCH_TYPE="hf"
              ;;
            profit_dep_minor_*)
              BRANCH_TYPE="minor"
              ;;
            *)
              BRANCH_TYPE="none"
              ;;
          esac
          
          echo "Branch Type: $BRANCH_TYPE"
          
          if [ "$BRANCH_TYPE" == "hf" ]; then
            # Get the latest HF branch
            latest_hf_branch=$(git branch -r | grep 'origin/profit_dep_hf_' | sed 's/origin\///' | sort -r | head -n 1 | xargs)
            echo "Latest HF branch: $latest_hf_branch"
            
            # Get the latest minor branch
            latest_minor_branch=$(git branch -r | grep 'origin/profit_dep_minor_' | sed 's/origin\///' | sort -r | head -n 1 | xargs)
            echo "Latest minor branch: $latest_minor_branch"

            # Output the branch names to environment variables
            echo "LATEST_HF_BRANCH=$latest_hf_branch" >> $GITHUB_ENV
            echo "LATEST_MINOR_BRANCH=$latest_minor_branch" >> $GITHUB_ENV
          else
            echo "Not an HF branch. Skipping."
            echo "LATEST_HF_BRANCH=" >> $GITHUB_ENV
            echo "LATEST_MINOR_BRANCH=" >> $GITHUB_ENV
          fi

      - name: Verify Branch Existence
        id: check-branches
        run: |
          if [[ -z "${{ env.LATEST_HF_BRANCH }}" || -z "${{ env.LATEST_MINOR_BRANCH }}" ]]; then
            echo "One or both branches do not exist or are not selected."
            exit 1
          fi

      - name: Create Pull Request for Latest HF to Minor
        if: env.LATEST_HF_BRANCH != '' && env.LATEST_MINOR_BRANCH != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating PR to merge ${{ env.LATEST_HF_BRANCH }} into ${{ env.LATEST_MINOR_BRANCH }}"
          gh pr create --base ${{ env.LATEST_MINOR_BRANCH }} --head ${{ env.LATEST_HF_BRANCH }} --title "Merge ${{ env.LATEST_HF_BRANCH }} into ${{ env.LATEST_MINOR_BRANCH }}" --body "Automated PR to merge ${{ env.LATEST_HF_BRANCH }} into ${{ env.LATEST_MINOR_BRANCH }}"

      - name: Handle Missing Branches
        if: env.LATEST_HF_BRANCH == '' || env.LATEST_MINOR_BRANCH == ''
        run: |
          echo "Required branches are missing or not found."
          exit 1
